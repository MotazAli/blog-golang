definitions:
  models.Comment:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - body
    - post_id
    - user_id
    type: object
  models.CommentCreateRequest:
    properties:
      body:
        type: string
      post_id:
        type: string
      user_id:
        type: string
    required:
    - body
    - post_id
    - user_id
    type: object
  models.CommentUpdateRequest:
    properties:
      body:
        type: string
    required:
    - body
    type: object
  models.Post:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - body
    - title
    - user_id
    type: object
  models.PostCreateRequest:
    properties:
      body:
        type: string
      title:
        type: string
      user_id:
        type: string
    required:
    - body
    - title
    - user_id
    type: object
  models.PostUpdateRequest:
    properties:
      body:
        type: string
      title:
        type: string
    required:
    - body
    - title
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    - password
    type: object
  responses.Response:
    properties:
      message:
        type: string
      result:
        additionalProperties: true
        type: object
      status:
        type: integer
    type: object
info:
  contact:
    email: motaz_ali@htomail.com
    name: Motaz Ali
    url: https://github.com/MotazAli/blog-golang
  license:
    name: GPL-3.0 license
    url: https://github.com/MotazAli/blog-golang/blob/main/LICENSE
paths:
  /comments:
    get:
      consumes:
      - application/json
      description: Get all comments or get comments using pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of object you want to return
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Comment'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get all comments or get comments using pagination
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: create new comment
      parameters:
      - description: Add comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.CommentCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Comment'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: create new comment
      tags:
      - comments
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete comment by id
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Comment'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Delete comment by id
      tags:
      - comments
    get:
      consumes:
      - application/json
      description: Get comment info by id
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Comment'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get comment info by id
      tags:
      - comment
  /posts:
    get:
      consumes:
      - application/json
      description: Get all posts or get posts using pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of object you want to return
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Post'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get all posts or get posts using pagination
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: create post
      parameters:
      - description: Add post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Post'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: create post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Post'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Delete post by id
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get post info by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Post'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get post info by id
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Update post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Post'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Update post by id
      tags:
      - posts
  /users:
    get:
      consumes:
      - application/json
      description: Get all users or get users using pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of object you want to return
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get all users or get users using pagination
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create user account
      parameters:
      - description: Add user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: create user account
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Delete user by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user info by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Get user info by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Update user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Update user by id
      tags:
      - users
swagger: "2.0"
